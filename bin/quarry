#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var version = require('../package.json').version;

var fs = require('fs');
var _ = require('lodash');
var eyes = require('eyes');
var dye = require('dye');

var io = require('../');

console.log("quarry.io version " + dye.red(version));

program
  .version(version)

/*

  boot up a stack in minimal dev trim that takes the least amount of time to start

  there is no HQ server just a manual static network that runs a single stack 

  it uses IPC sockets and is fully compatable but the reception and switchboard setups
  are not mesh they are standalone

*/
program
  .command('build [path]')
  .description('test a quarry stack')
  .action(function(path){

    process.env.NODE_ENV = 'development';
    
    if(!path){
      path = process.cwd();
    }
    else if(path.indexOf('/')!=0){
      path = process.cwd() + '/' + path;
    }

    path = path.replace(/\/$/, '');

    /*
    
      create a development network
      
    */


    console.log('Building stack: ' + dye.cyan(path));

    var network = io.network()
      .build(path, function(error, buildid){
        if(error){
          console.log(dye.red(error));
        }
        else{
          console.log('stack built: ' + dye.yellow(buildid));
        }
      })
    
  })

program
  .command('list')
  .description('show the currently built stacks')
  .action(function(){
    console.log('');
    console.log('-------------------------------------------');
    console.log('Current quarry builds');

    var network = io.network()
      .list(function(error, list){
        if(error){
          console.log(dye.red(error));
        }
        else{
          console.log('');
          _.each(list, function(build){
            console.log('      * ' + dye.yellow(build));
          })
        }
      })

  })

program
  .command('cleanup')
  .description('remove all current builds')
  .action(function(){
    console.log('');
    console.log('-------------------------------------------');
    console.log('Deleting quarry builds');

    var network = io.network()
      .cleanup(function(error, list){
        if(error){
          console.log(dye.red(error));
        }
        else{
          console.log('');
          _.each(list, function(build){
            console.log('      * ' + dye.red(build) + ' deleted');
          })
        }
      })

  })

program
  .command('start')
  .description('run a quarry stack')
  .action(function(buildid){
    console.log('');
    console.log('-------------------------------------------');
    console.log('Running Quarry Stack:');
    console.log('');
    console.log(dye.yellow(buildid));

    var network = io.network()
      .run(buildid, function(error){
        if(error){
          console.log(dye.red(error));
        }
        else{
          console.log(dye.green('Quarry Running...'));
        }
      })
  })

program
  .command('job')
  .description('run a quarry job')
  .action(function(path){
    console.log('');
    console.log('-------------------------------------------');
    console.log('Running Quarry Job:');
    console.log('');
    console.log(dye.cyan(path));

    

  })

program
  .command('*')
  .action(function(command){
    console.log('command: "%s" not found', command);
  })

program.parse(process.argv);