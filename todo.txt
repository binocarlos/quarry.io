Todo

YAML Config
-----------

Have the config in container format:

system:
	name: Test System
	stacks:
		test:
			name: Test Stack
			
[{
	meta:{
		tagname:'system'
	},
	attr:{
		// the sytem config here (like database)
	},
	children:[{
		meta:{
			tagname:'stack'
		},
		attr:{
			name:'Test Stack'
		},
		children:[{
			meta:{
				tagname:'service'
			}
		}]
	}]
}]
Links
-----

Every model has a global system unique id.

The same quarryid's data can exists in multiple places at the same time.

The links array of each model contains the routes to each supplier that must be updated.

When a POST/PUT or DELETE goes via a contract resolver - it will look the the links
of the thing being modified and duplicate out a request for each of those

there is always a primary route stamped which is the supplier the data came from

Worker Radio
------------

Sack off all the bollox with stacks and collections and blah

Just have 

	network 

		-> users (roots)

		-> system

			-> infrastructure
				->instance

			-> collection
				-> stack
					-> service
					-> worker (<- instance)
						-> node (<- service)

The workers start off blank.

You boot nodes onto workers via radio.

You can do anything with workers via radio.

You can set workers classnames - arrange them however, basically use a quarrydb to manage the workers.

Loading nodes onto workers that are selecting with CSS selectors.

A node can be communicated to also.