Base install of VM or system for jQuarry
----------------------------------------

2 types of install logged: 

a) production (sherman.jquarry.com) - installed in da clowd (Flexiant)

b) development (boddington.jquarry.com) - installed on vmware locally (192.)

b) jack development (mirny.jquarry.com) - installed on Jacks Rackspace


step by steps wot I done:



--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Mirny
----------


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// setup

adduser webkit (Wk5ut_9Lt)

apt-get update

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// MySQL

apt-get install mysql-server mysql-client

-> password = tigertank

apt-get install libmysqlclient-dev

-> install database schema


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// haproxy
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install haproxy

-> installed /etc/haproxy/haproxy.cfg

-> edit /etc/default/haproxy -> enable


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// node.js
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install git
apt-get install python
apt-get install g++
apt-get openssl ssl-cert
apt-get libssl-dev
apt-get install pkg-config
apt-get install build-essential



git clone git://github.com/creationix/nvm.git /home/webkit/nvm

-> add ". /home/webkit/nvm/nvm.sh" to /root/.bashrc

export JOBS=4
nvm install v0.6.14
nvm alias default 0.6.14

















--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

Sherman
----------


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// setup

adduser webkit (Wk5ut_9Lt)

apt-get update

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// MySQL

apt-get install mysql-server mysql-client

-> password = tigertank

apt-get install libmysqlclient-dev

-> install database schema

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// haproxy
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install haproxy


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// node.js
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

git clone git://github.com/creationix/nvm.git ~/nvm

-> add ". ~/nvm/nvm.sh" to /root/.bashrc

export JOBS=4
nvm install v0.6.14
nvm alias default 0.6.14


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// svn
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install subversion

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------





Boddington
----------

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// basic access
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

// configure with the static IP

-> /etc/network/interfaces

iface eth0 inet static
        address 192.168.1.212
        netmask 255.255.255.0
        network 192.168.1.0
        broadcast       192.168.1.255
        gateway 192.168.1.1

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

// add the openDNS servers

-> /etc/resolv.conf

domain localdomain
search localdomain
nameserver 208.67.222.222
nameserver 208.67.220.220

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

// restart and test network

-> restart vmware

ping 192.168.1.1
ping google.com

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

// setup SSH / WINSCP - now we have basic access

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install vim

adduser quarry

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// Samba
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install libcupsys2 samba samba-common

-> workgroup = WEBKIT

-> /etc/samba/smb.conf

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
[global]
	workgroup = WEBKIT
	server string = Boddington
	security = share
	name resolve order = hosts lmhosts
	oplocks = False
	level2 oplocks = False
[boddington] 
	path = /home/webkit
	force user = webkit
	force group = quarry
	read only = no
	guest ok = yes
	create mask = 0644
	directory mask = 0775
	force create mode = 0664
	force directory mode = 0775
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------	

-> (DONT FORGET THE FILE LOCK THINGY fnctl = no thanks)

/etc/init.d/samba restart

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// MYSQL
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install mysql-server mysql-client

-> password = root

-> install files/mysql_schema.sql

apt-get install libmysqlclient-dev

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// NIGINX - PHP-FPM - 
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

http://www.freshblurbs.com/install-php-5-3-nginx-and-php-fpm-debian-lenny

apt-get install nginx
apt-get install php5-cli php5-common php5-suhosin
apt-get install php5-fpm php5-cgi php5-apc
apt-get install php-pear
apt-get install build-essential
cd /tmp
wget http://mirrors.kernel.org/debian/pool/main/p/php5/php5-dev_5.3.3-7+squeeze8_amd64.deb
dpkg -i php5-dev_5.3.3-7+squeeze8_amd64.deb
apt-get -f --force-yes --yes install
dpkg -i php5-dev_5.3.3-7+squeeze8_amd64.deb
apt-get install php5-curl
apt-get install php5-gd
apt-get install php5-mcrypt
apt-get install php5-http
apt-get install php5-mysql

-> created /etc/php5/conf.d/xdebug.ini
-> symlink jquarry from sites-available to sites-enabled
-> remove default site

/etc/init.d/nginx restart
/etc/init.d/php5-fpm restart


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// MONGO
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10

-> add deb http://downloads-distro.mongodb.org/repo/debian-sysvinit dist 10gen onto /etc/apt/sources.list

apt-get update

apt-get install mongodb-10gen

-> created /etc/php5/conf.d/mongo.ini

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// PHP STACK
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

-> first - put the files from 'files/install_test_php' into the web root and run - this will tell you if you are good to go

-> added rockmongo nginx host

-> configured the nginx host config to handle the filestore etc

-> moved the jquarry kohana setup over

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// node.js
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install git-core curl build-essential openssl libssl-dev
cd /tmp
git clone https://github.com/joyent/node.git
cd node
export JOBS=CORES # optional, sets number of parallel commands.
./configure
make -j4
make install
curl http://npmjs.org/install.sh | sh



-> installed /node/quarryscript/*.js



apt-get install sudo
apt-get install upstart

-> installed /etc/init/quarryscript.conf

start quarryscript

-> node.js is now running and controlled by /node/quarryscript/server.js


-> NOTE - the files/express/view.js is a hacked one so ejs partials work

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// PHP DNODE
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

-> unpack /install/downloads/dnode

wget http://getcomposer.org/composer.phar 
php composer.phar install
-> copy codebase to classes (done)


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// Rabbit MQ
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

-> Add the following line to your /etc/apt/sources.list:

deb http://www.rabbitmq.com/debian/ testing main

-> To avoid warnings about unsigned packages, add our public key to your trusted key list using apt-key(8)

wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
apt-key add rabbitmq-signing-key-public.asc
apt-get update
apt-get install rabbitmq-server

rabbitmq-plugins enable rabbitmq_management
/etc/init.d/rabbitmq-server restart

http://dev.jquarry.com:55672/mgmt/

guest:guest


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// STRESS TESTING
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install apache2-utils

ab -n 10 -c 10 http://boddington.jquarry.com/app/console


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// ROCK MONGO
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

-> added rockmongo to nginx sites enabled

mongo.dev.jquarry.com

admin:admin

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// REDIS
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get update
apt-get upgrade
apt-get install build-essential

cd /opt/
mkdir /opt/redis
wget http://redis.googlecode.com/files/redis-2.2.2.tar.gz
tar -zxvf /opt/redis-2.2.2.tar.gz
cd /opt/redis-2.2.2/
make

cp /opt/redis-2.2.2/redis.conf /opt/redis/redis.conf.default
cp /opt/redis-2.2.2/src/redis-benchmark /opt/redis/
cp /opt/redis-2.2.2/src/redis-cli /opt/redis/
cp /opt/redis-2.2.2/src/redis-server /opt/redis/
cp /opt/redis-2.2.2/src/redis-check-aof /opt/redis/
cp /opt/redis-2.2.2/src/redis-check-dump /opt/redis/

cp /opt/redis/redis.conf.default /opt/redis/redis.conf

-> copy the following source into /opt/redis/redis.conf

--------------------------------------------------------------------------------

daemonize yes
pidfile /var/run/redis.pid
logfile /var/log/redis.log

port 6379
bind 127.0.0.1
timeout 300

loglevel notice

## Default configuration options
databases 16

save 900 1
save 300 10
save 60 10000

rdbcompression yes
dbfilename dump.rdb

dir /opt/redis/
appendonly no

glueoutputbuf yes

--------------------------------------------------------------------------------

cd /opt/
wget -O init-deb.sh http://library.linode.com/assets/627-redis-init-deb.sh
adduser --system --no-create-home --disabled-login --disabled-password --group redis
mv /opt/init-deb.sh /etc/init.d/redis
chmod +x /etc/init.d/redis
chown -R redis:redis /opt/redis
touch /var/log/redis.log
chown redis:redis /var/log/redis.log
update-rc.d -f redis defaults

/etc/init.d/redis start
/etc/init.d/redis stop



-> to monitor redis connections:

/opt/redis/redis-cli
MONITOR


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// VS-FTPD
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install vsftpd libpam-mysql

useradd --home /home/vsftpd --gid quarry -m --shell /bin/false vsftpd

cp /etc/vsftpd.conf /etc/vsftpd.conf_orig
cat /dev/null > /etc/vsftpd.conf

-> /etc/vsftpd.conf
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
listen=YES
anonymous_enable=NO
local_enable=YES
write_enable=YES
local_umask=002
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
nopriv_user=vsftpd
chroot_local_user=YES
secure_chroot_dir=/var/run/vsftpd
pam_service_name=vsftpd
rsa_cert_file=/etc/ssl/certs/vsftpd.pem
guest_enable=YES
guest_username=vsftpd
local_root=/home/webkit/sites/quarrycore/installations/$USER
user_sub_token=$USER
virtual_use_local_privs=YES
user_config_dir=/etc/vsftpd_user_conf
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

mkdir /etc/vsftpd_user_conf
cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd_orig


-> /etc/pam.d/vsftpd
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
auth required pam_mysql.so user=jquarryftppam passwd=jquarryftppam host=localhost db=jquarry table=website usercolumn=ftp_username passwdcolumn=ftp_password crypt=0
account required pam_mysql.so user=jquarryftppam passwd=jquarryftppam host=localhost db=jquarry table=website usercolumn=ftp_username passwdcolumn=ftp_password crypt=0
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
// libxmljs
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

apt-get install libxml2 libxml2-dev
npm install libxmljs
apt-get install expat libexpat1-dev
npm install xml2json